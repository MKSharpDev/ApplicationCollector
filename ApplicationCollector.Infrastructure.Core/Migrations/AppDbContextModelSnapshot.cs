// <auto-generated />
using System;
using ApplicationCollector.Infrastructure.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApplicationCollector.Infrastructure.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCollector.Domain.Entities.ConfApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Author")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Outline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SpeakerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SpeakerId");

                    b.ToTable("ConfApplications");
                });

            modelBuilder.Entity("ApplicationCollector.Domain.Entities.ConfApplicationDraft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Activity")
                        .HasColumnType("text");

                    b.Property<Guid>("Author")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Outline")
                        .HasColumnType("text");

                    b.Property<Guid?>("SpeakerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SpeakerId");

                    b.ToTable("ConfApplicationDrafts");
                });

            modelBuilder.Entity("ApplicationCollector.Domain.Entities.Speaker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApplicationDraftInProgressId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("ApplicationCollector.Domain.Entities.ConfApplication", b =>
                {
                    b.HasOne("ApplicationCollector.Domain.Entities.Speaker", "Speaker")
                        .WithMany("Applications")
                        .HasForeignKey("SpeakerId");

                    b.Navigation("Speaker");
                });

            modelBuilder.Entity("ApplicationCollector.Domain.Entities.ConfApplicationDraft", b =>
                {
                    b.HasOne("ApplicationCollector.Domain.Entities.Speaker", "Speaker")
                        .WithMany("ApplicationDraft")
                        .HasForeignKey("SpeakerId");

                    b.Navigation("Speaker");
                });

            modelBuilder.Entity("ApplicationCollector.Domain.Entities.Speaker", b =>
                {
                    b.Navigation("ApplicationDraft");

                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
